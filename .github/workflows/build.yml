name: Build and Package

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        arch: [amd64, arm64]
        include:
          - os: ubuntu-20.04
            arch: amd64
            cmake-args: -DCMAKE_SYSTEM_PROCESSOR=x86_64
          - os: ubuntu-20.04
            arch: arm64
            cmake-args: -DCMAKE_SYSTEM_PROCESSOR=aarch64
          - os: ubuntu-22.04
            arch: amd64
            cmake-args: -DCMAKE_SYSTEM_PROCESSOR=x86_64
          - os: ubuntu-22.04
            arch: arm64
            cmake-args: -DCMAKE_SYSTEM_PROCESSOR=aarch64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release ${{ matrix.cmake-args }}

    - name: Build project
      run: |
        cd build
        make -j$(nproc)

    - name: Package project
      run: |
        cd build
        make package

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: gimbal-control-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          build/*.deb
          build/*.so

  release:
    needs: build
    runs-on: ubuntu-22.04
    if: github.event_name == 'release'
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          artifacts/**/*.deb
          artifacts/**/*.so